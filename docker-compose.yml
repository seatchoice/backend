version: '3.4'

services:

  # wurstmeister/zookeeper:3.4.6
  zookeeper:
    hostname: zookeeper
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - elastic

  # wurstmeister/kafka:2.13-2.8.1 
  kafka:
    hostname: kafka
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.8.1
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://43.200.67.139:9092 # 외부에서 받는 주소.
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_HOST_NAME: 43.200.67.139
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "kafka-chatting:1:1" #topic 실행할 때 설정해줌, 1:1은 각각 파티션, 레플리카 갯수
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - elastic

  redis:
    container_name: redis
    image: redis:7.0.8
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD --port 6379"
    env_file:
      - .env
    ports:
      - "6379:6379"
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "network.host=0.0.0.0"
      - "http.host=0.0.0.0"
      - "transport.host=0.0.0.0"
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - /home/ubuntu/data:/usr/share/elasticsearch/data
    networks:
      - elastic

  app:
    image: sunju5402/seatchoice
    container_name: seatchoice
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      - redis
    restart: always

networks:
  elastic:
    driver: bridge